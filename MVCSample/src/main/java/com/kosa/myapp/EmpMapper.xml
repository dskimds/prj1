<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.myapp.IEmpRepository">
	<select id="getEmpCount" parameterType="int" resultType="int">
		SELECT COUNT(*) From employees
		<if test="deptid !=null">
			where department_id=#{deptid}
		</if> 
	</select>
	
	
	<resultMap type="com.kosa.myapp.EmpVO" id="empMap">
		<result column="employee_id" property="employeeId"/>
		<result column="first_name" property="firstName"/>
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="phone_number" property="phoneNumber"/>
		<result column="hire_date" property="hireDate"/>
		<result column="job_id" property="jobId"/>
		<result column="salary" property="salary"/>
		<result column="commission_pct" property="commissionPct"/>
		<result column="manager_id" property="managerId"/>
		<result column="department_id" property="departmentId"/>
	</resultMap>
	<select id="getEmpList" resultMap="empMap">
		select* from employees	
	</select>
	
	<select id="getEmpInfo" parameterType="int" resultType="com.kosa.myapp.EmpVO">
		select employee_id as employeeId,
			   first_name as firstName,
			   last_name as lastName,
			   email as email,
			   phone_number as phoneNumber,
			   hire_date as hireDate,
			   job_id as jobId,
			   salary as salary,
			   commission_pct as commissionPct,
			   manager_id as managerId,
			   department_id as departmentId
		from employees where employee_id=#{empid}	
	</select>
	
	<update id="updateEmp" parameterType="com.kosa.myapp.EmpVO">
		UPDATE EMPLOYEES
		SET first_name=#{firstName}, last_name=#{lastName}, email=#{email}, 
			phone_number=#{phoneNumber}, hire_date=#{hireDate}, job_id=#{jobId},
			salary=#{salary}, commission_pct=#{commissionPct}, manager_id=#{managerId}, department_id=#{departmentId}
		WHERE EMPLOYEE_ID=#{employeeId}
	</update>
	
	<insert id="insertEmp" parameterType="com.kosa.myapp.EmpVO">
		INSERT INTO EMPLOYEES (employee_id, first_name, last_name, email, phone_number, hire_date, job_id,
								salary, commission_pct, manager_id, department_id)
		VALUES (#{employeeId}, #{firstName}, #{lastName}, #{email}, #{phoneNumber}, #{hireDate}, #{jobId},
				#{salary}, #{commissionPct}, #{managerId}, #{departmentId})
	</insert>
	<delete id="deleteEmp">
		delete from employees
		where employee_id=#{empid} AND email=#{email}
	</delete>
	
	<delete id="deleteJobHistory" parameterType="int">
		delete from job_history
		where employee_id=#{empid}	
	</delete>
	
	<select id="getAllJobId" resultType="hashmap">
		select job_id as "jobId", job_title as "title" from jobs	
	</select>
	
	<select id="getAllManagerId" resultType="hashmap">
		SELECT	D.MANAGER_ID as "managerId",
				E.FIRST_NAME as "firstName"
		from DEPARTMENTS D join EMPLOYEES E on D.MANAGER_ID = E.EMPLOYEE_ID
		ORDER BY D.MANAGER_ID
	</select>
	
	<select id="getAllDeptId" resultType="hashmap">
		select department_id as "departmentId",
			   department_name as "departmentName"
		from departments
	</select>
</mapper>